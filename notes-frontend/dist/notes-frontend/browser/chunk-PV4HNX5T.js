import{Z as l,i as s,l as c}from"./chunk-CS3A7NQZ.js";var o=class extends Error{};o.prototype.name="InvalidTokenError";function u(r){return decodeURIComponent(atob(r).replace(/(.)/g,(t,e)=>{let n=e.charCodeAt(0).toString(16).toUpperCase();return n.length<2&&(n="0"+n),"%"+n}))}function h(r){let t=r.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return u(t)}catch{return atob(t)}}function p(r,t){if(typeof r!="string")throw new o("Invalid token specified: must be a string");t||(t={});let e=t.header===!0?0:1,n=r.split(".")[e];if(typeof n!="string")throw new o(`Invalid token specified: missing part #${e+1}`);let a;try{a=h(n)}catch(i){throw new o(`Invalid token specified: invalid base64 for part #${e+1} (${i.message})`)}try{return JSON.parse(a)}catch(i){throw new o(`Invalid token specified: invalid json for part #${e+1} (${i.message})`)}}var d=class r{constructor(t){this.http=t}apiUrl="http://localhost:8080/api/auth";currentUserEmail=null;getApiUrl(){return"http://localhost:8080/api"}register(t){return this.http.post(`${this.apiUrl}/register`,t)}login(t){return this.http.post(`${this.apiUrl}/login`,t)}getToken(){return localStorage.getItem("auth_token")}isLoggedIn(){return!!localStorage.getItem("auth_token")}getCurrentUserEmail(){return this.currentUserEmail||this.decodeAndSetCurrentUser(),this.currentUserEmail}decodeAndSetCurrentUser(){let t=this.getToken();if(t)try{let e=p(t);this.currentUserEmail=e.sub}catch{this.currentUserEmail=null}}static \u0275fac=function(e){return new(e||r)(c(l))};static \u0275prov=s({token:r,factory:r.\u0275fac,providedIn:"root"})};export{d as a};
